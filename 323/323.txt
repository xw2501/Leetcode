class Solution {
    public int countComponents(int n, int[][] edges) {

        List<List<Integer>> list = new ArrayList<List<Integer>>();
        for(int i=0; i<edges.length; i++) {
            if(list.size()==0) {
                List<Integer> temp = new ArrayList<Integer>();
                temp.add(edges[i][0]);
                temp.add(edges[i][1]);
                list.add(temp);
            }
            else {
                int preind = -1;
                boolean flag = false;
                for(int j=0; j<list.size(); j++) {
                    if(list.get(j).contains(edges[i][0]) || list.get(j).contains(edges[i][1])) {
                        list.get(j).add(edges[i][0]);
                        list.get(j).add(edges[i][1]);
                        if(preind != -1) {
                            list.get(preind).addAll(list.remove(j--));
                        }
                        else
                            preind = j;
                        flag = true;
                    }
                }
                if(!flag) {
                    List<Integer> temp = new ArrayList<Integer>();
                    temp.add(edges[i][0]);
                    temp.add(edges[i][1]);
                    list.add(temp);
                }
            }
        }
        
        System.out.println(list.size());
        int res = list.size();
        for(int i=0; i<n; i++) {
            boolean flag = false;
            for(int j=0; j<list.size(); j++) {
                if(list.get(j).contains(i))
                    flag = true;
            }
            if(!flag)
                res++;
        }
        
        return res;
    }
}