public class Solution {
    public boolean isMatch(String s, String p) {
        
        //ºÚµ•≈–∂œ
        /*
        if(s==null && p==null)
            return true;
        if(s==null && p!=null)
            return false;
        if(s!=null && p==null)
            return false;
        */
        //≥§∂»≈–∂œ
        boolean[][] res = new boolean[s.length() + 1][p.length() + 1];
        res[0][0] = true;
        for (int i = 0; i < p.length(); i++) {
            if(p.charAt(i)=='*')
                res[0][i+1]=res[0][i];
        }

        for(int i=0;i<s.length();i++){
            for(int j=0;j<p.length();j++){
                if(p.charAt(j)=='?'||p.charAt(j)==s.charAt(i))
                    res[i+1][j+1]=res[i][j];
                if(p.charAt(j)=='*'){
                    res[i+1][j+1]=res[i+1][j]||res[i][j+1];
                }
            }
        }

        return res[s.length()][p.length()];
        /*
        if(slen==0 && plen==0)
            return true;
        if(slen!=0 && plen==0)
            return false;
        
        if(p.charAt(plen-1)=='?') {
            if(slen==0)
                return false;
            return isMatch(s.substring(0,slen-1),p.substring(0,plen-1));
        }
        else if(p.charAt(plen-1)=='*') {
            if(plen==1)
                return true;
            else {
                if(p.charAt(plen-2)=='*' || slen==0)
                    return isMatch(s,p.substring(0,plen-1));
                if(isMatch(s,p.substring(0,plen-1)))
                    return true;
                else
                    return isMatch(s.substring(0,slen-1),p);
            }
        }
        else {
            if(slen==0)
                return false;
            if(p.charAt(plen-1)==s.charAt(slen-1))
                return isMatch(s.substring(0,slen-1),p.substring(0,plen-1));
            else
                return false;
        }
        */
    }
}