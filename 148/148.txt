/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null || head.next==null)
            return head;
        int len = 0;
        ListNode node = head;
        while(node!=null) {
            len++;
            node = node.next;
        }
        len = len/2-1;
        node = head;
        for(int i=0; i<len; i++) {
            node = node.next;
        }
        ListNode mid = node.next;
        node.next = null;
        head = sortList(head);
        mid = sortList(mid);
        return mergeTwoLists(head, mid);
    }
    
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode l = new ListNode(0), p = l;   
        while (l1 != null && l2 != null) {
            if (l1.val < l2.val) {
                p.next = l1;
                l1 = l1.next;
            } else {
                p.next = l2;
                l2 = l2.next;
            }
            p = p.next;
        }
    
        if (l1 != null)
        p.next = l1;
    
        if (l2 != null)
        p.next = l2;
    
        return l.next;
    }
}
