/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        int start = newInterval.start;
        int end = newInterval.end;
        List<Interval> res = new ArrayList<>();
        if(intervals.size()==0) {
            res.add(newInterval);
            return res;
        }
        
        for( ; intervals.size()>0; ) {
            if(intervals.get(0).end<start)
                res.add(intervals.remove(0));
            else
                break;
        }
        
        if(intervals.size()==0) {
            res.add(newInterval);
            return res;
        }
        int newStart = Math.min(start, intervals.get(0).start);
        int newEnd = end;
        
        for( ; intervals.size()>0; ) {
            if(intervals.get(0).start>newEnd)
                break;
            else if(intervals.get(0).end>newEnd) {
                newEnd = intervals.remove(0).end;
                break;
            }
            else
                intervals.remove(0);
        }
        
        res.add(new Interval(newStart, newEnd));
        
        for( ; intervals.size()>0; ) {
            res.add(intervals.remove(0));
        }
        
        return res;
    }
}