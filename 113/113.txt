/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new LinkedList<>();
        List<Integer> list = new LinkedList<>();
        if(root==null)
            return res;
        preorder(root, sum, 0, res, list);
        return res;
    }
    
    public void preorder(TreeNode root, int sum, int cur, List<List<Integer>> res, List<Integer> list) {
        cur += root.val;
        //System.out.println(cur);
        list.add(root.val);
        if(root.left==null && root.right==null) {
            if(cur==sum) {
                List<Integer> newList = new LinkedList<>();
                newList.addAll(list);
                res.add(newList);
            }
        }
        else {
            if(root.left!=null)
                preorder(root.left, sum, cur, res, list);
            if(root.right!=null)
                preorder(root.right, sum, cur, res, list);
        }
        cur -= root.val;
        list.remove(list.size()-1);
        return;
    }
}