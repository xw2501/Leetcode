public class Solution {
    public int calculateMinimumHP(int[][] dungeon) {
        int m = dungeon.length;
        int n = dungeon[0].length;
        int[][] hp = new int[m][n];
        
        hp[m-1][n-1] = dungeon[m-1][n-1] < 0 ? 1-dungeon[m-1][n-1] : 1;
        
        for(int i=m-2; i>=0; i--) {
            hp[i][n-1] = hp[i+1][n-1]-dungeon[i][n-1] > 0 ? hp[i+1][n-1]-dungeon[i][n-1] : 1;
        }
        for(int j=n-2; j>=0; j--) {
            hp[m-1][j] = hp[m-1][j+1]-dungeon[m-1][j] > 0 ? hp[m-1][j+1]-dungeon[m-1][j] : 1;
        }
        
        for(int i=m-2; i>=0; i--) {
            for(int j=n-2; j>=0; j--) {
                int left = hp[i][j+1]-dungeon[i][j] > 0 ? hp[i][j+1]-dungeon[i][j] : 1;
                int down = hp[i+1][j]-dungeon[i][j] > 0 ? hp[i+1][j]-dungeon[i][j] : 1;
                hp[i][j] = Math.min(left, down);
            }
        }
        
        return hp[0][0];
    }
}