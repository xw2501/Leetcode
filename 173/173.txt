/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {

    private List<Integer> list;
    
    public BSTIterator(TreeNode root) {
        list = new LinkedList<Integer>();
        preOrder(root);
    }

    public void preOrder(TreeNode root) {
        if(root==null)
            return;
        preOrder(root.left);
        list.add(root.val);
        preOrder(root.right);
        return;
    }
    
    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !list.isEmpty();
    }

    /** @return the next smallest number */
    public int next() {
        return list.remove(0);
    }
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */